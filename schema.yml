openapi: 3.0.3
info:
  title: Solfacil Challenge
  version: 1.0.0
  description: Desafio Solfacil para seleção de desenvolvedor backend Jr
paths:
  /login/:
    post:
      operationId: login_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /partners/:
    get:
      operationId: partners_list
      tags:
      - partners
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Partner'
          description: ''
    post:
      operationId: partners_create
      tags:
      - partners
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Partner'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Partner'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Partner'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partner'
          description: ''
  /partners/{id}/:
    get:
      operationId: partners_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - partners
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partner'
          description: ''
    patch:
      operationId: partners_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - partners
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPartner'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPartner'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPartner'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partner'
          description: ''
    delete:
      operationId: partners_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - partners
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /partners/last-partners/:
    get:
      operationId: partners_last_partners_list
      tags:
      - partners
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Partner'
          description: ''
  /plants/:
    get:
      operationId: plants_list
      tags:
      - plants
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Plant'
          description: ''
    post:
      operationId: plants_create
      tags:
      - plants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Plant'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Plant'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Plant'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plant'
          description: ''
  /plants/{id}/:
    get:
      operationId: plants_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - plants
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlantDetail'
          description: ''
    patch:
      operationId: plants_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - plants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPlantDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPlantDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPlantDetail'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlantDetail'
          description: ''
    delete:
      operationId: plants_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - plants
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /plants/top-capacity/:
    get:
      operationId: plants_top_capacity_list
      tags:
      - plants
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Plant'
          description: ''
  /refresh/:
    post:
      operationId: refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - refresh
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
components:
  schemas:
    Partner:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 200
        cnpj:
          type: string
          minLength: 8
        email:
          type: string
          format: email
          maxLength: 254
        password:
          type: string
          writeOnly: true
          maxLength: 128
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - cnpj
      - created_at
      - email
      - id
      - name
      - password
      - updated_at
    PatchedPartner:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 200
        cnpj:
          type: string
          minLength: 8
        email:
          type: string
          format: email
          maxLength: 254
        password:
          type: string
          writeOnly: true
          maxLength: 128
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedPlantDetail:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 200
        cep:
          type: string
          minLength: 8
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        maximum_capacity_GW:
          type: integer
          maximum: 32767
          minimum: 0
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        partner:
          allOf:
          - $ref: '#/components/schemas/Partner'
          readOnly: true
    Plant:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 200
        cep:
          type: string
          minLength: 8
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        maximum_capacity_GW:
          type: integer
          maximum: 32767
          minimum: 0
        partner_id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - cep
      - created_at
      - id
      - latitude
      - longitude
      - maximum_capacity_GW
      - name
      - partner_id
      - updated_at
    PlantDetail:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 200
        cep:
          type: string
          minLength: 8
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        maximum_capacity_GW:
          type: integer
          maximum: 32767
          minimum: 0
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        partner:
          allOf:
          - $ref: '#/components/schemas/Partner'
          readOnly: true
      required:
      - cep
      - created_at
      - id
      - latitude
      - longitude
      - maximum_capacity_GW
      - name
      - partner
      - updated_at
    TokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - email
      - password
      - refresh
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
